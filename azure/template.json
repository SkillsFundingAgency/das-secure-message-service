{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceEnvironmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "redisConnectionString": {
            "type": "string",
            "metadata": {
                "description": "Connection string for the redis cache."
            }
        },
        "azureADTenant": {
            "type": "string",
            "metadata": {
                "description": "Azure Tenant the API lives in"
            }
        },
        "azureADClientId": {
            "type": "string",
            "metadata": {
                "description": "Client Id of the app registration"
            }
        },
        "azureADResourceId": {
            "type": "string",
            "metadata": {
                "description": "Resource Identifier of the app registration"
            }
        },
        "cdnUrl": {
            "type": "string",
            "metadata": {
                "description": "The url of the cdn used to serve static content."
            }
        },
        "applicationPathBase": {
            "type": "string",
            "metadata": {
                "description": "The base path appended to the host. For use when behind a reverse proxy. https//proxy.com/myapp/xxxx"
            }
        },
        "aspnetCoreEnvironment": {
            "type": "string",
            "defaultValue": "Production",
            "metadata": {
                "description": "Value for ASPNETCORE_ENVIRONMENT that will determine how the app runs"
            }
        },
        "appServicePlanSize": {
            "type": "string",
            "defaultValue": "1"
        },
        "appServicePlanInstances": {
            "type": "int",
            "defaultValue": 1
        },
        "redisCacheSKU": {
            "type": "string",
            "defaultValue": "Basic"
        },
        "redisCacheFamily": {
            "type": "string",
            "defaultValue": "C"
        },
        "redisCacheCapacity": {
            "type": "int",
            "defaultValue": 0
        },
        "gatewayVirtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The resource group of the virtual network consumed by the app gateway."
            }
        },
        "gatewayVirtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network consumed the app gateway."
            }
        },
        "gatewaySubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the subnet consumed by the app gateway."
            }
        },
        "gitHubClientId": {
            "type": "string",
            "metadata": {
                "description": "The client id for github oauth."
            }
        },
        "gitHubClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The client secret for github oauth."
            }
        },
        "gitHubValidOrganizations": {
            "type": "string",
            "metadata": {
                "description": "A csv of valid organizations."
            }
        },
        "gitHubCallbackPath": {
            "type": "string",
            "defaultValue": "/signin-github",
            "metadata": {
                "description": "The call back path used by authentication middleware."
            }
        },
        "gitHubScope": {
            "type": "string",
            "defaultValue": "read:org",
            "metadata": {
                "description": "Scope for token access."
            }
        },
        "gitHubRedirectUrl": {
            "type": "string",
            "defaultValue": "/Messages",
            "metadata": {
                "description": "The redirect url used in oauth requests."
            }
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "appServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
        "appServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]",
        "redisCacheName": "[concat(variables('resourceNamePrefix'), '-rds')]"
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "app-service-plan",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "nonASETier": {
                        "value": "Standard"
                    },
                    "aspSize": {
                        "value": "[parameters('appServicePlanSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('appServicePlanInstances')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "app-service",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference('app-insights').outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "RedisConnectionString",
                                "value": "[parameters('redisConnectionString')]"
                            },
                            {
                                "name": "cdn:url",
                                "value": "[parameters('cdnUrl')]"
                            },
                            {
                                "name": "ApplicationPathBase",
                                "value": "[parameters('applicationPathBase')]"
                            },
                            {
                                "name": "ASPNETCORE_ENVIRONMENT",
                                "value": "[parameters('aspnetCoreEnvironment')]"
                            },
                            {
                                "name": "Authentication:GitHub:ClientId",
                                "value": "[parameters('gitHubClientId')]"
                            },
                            {
                                "name": "Authentication:GitHub:ClientSecret",
                                "value": "[parameters('gitHubClientSecret')]"
                            },
                            {
                                "name": "Authentication:GitHub:ValidOrganizations",
                                "value": "[parameters('gitHubValidOrganizations')]"
                            },
                            {
                                "name": "Authentication:GitHub:CallbackPath",
                                "value": "[parameters('gitHubCallbackPath')]"
                            },
                            {
                                "name": "Authentication:GitHub:Scope",
                                "value": "[parameters('gitHubScope')]"
                            },
                            {
                                "name": "Authentication:GitHub:RedirectUrl",
                                "value": "[parameters('gitHubRedirectUrl')]"
                            }
                        ]
                    },
                    "ipSecurityRestrictions": {
                        "value": [
                            {
                                "name": "Gateway",
                                "action": "Allow",
                                "priority": 100,
                                "vnetSubnetResourceId": "[resourceId(parameters('gatewayVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('gatewayVirtualNetworkName'), parameters('gatewaySubnetName'))]"
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "app-service-plan"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "redis-cache",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'redis.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "redisCacheName": {
                        "value": "[variables('redisCacheName')]"
                    },
                    "redisCacheSKU": {
                        "value": "[parameters('redisCacheSKU')]"
                    },
                    "redisCacheFamily": {
                        "value": "[parameters('redisCacheFamily')]"
                    },
                    "redisCacheCapacity": {
                        "value": "[parameters('redisCacheCapacity')]"
                    },
                    "enableNonSslPort": {
                        "value": false
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "app-insights",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('appServiceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "api-app-service",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[parameters('apiAppServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference('app-insights').outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "RedisConnectionString",
                                "value": "[parameters('redisConnectionString')]"
                            },
                            {
                                "name": "ASPNETCORE_ENVIRONMENT",
                                "value": "[parameters('aspnetCoreEnvironment')]"
                            },
                            {
                                "name": "UIBaseUrl",
                                "value": "[concat('https://',  if(greater(length(parameters('customHostName')), 0), parameters('customHostName'), concat(parameters('appServiceName'), '.azurewebsites.net')))]"
                            },
                            {
                                "name": "AzureAdTenant",
                                "value": "[parameters('azureAdTenant')]"
                            },
                            {
                                "name": "AzureADResourceId",
                                "value": "[parameters('azureADResourceId')]"
                            },
                            {
                                "name": "AzureADClientId",
                                "value": "[parameters('azureADClientId')]"
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "app-service-plan",
                "app-service-certificate"
            ]
        }
    ],
    "outputs": {
        "AppServiceName": {
            "type": "string",
            "value": "[variables('appServiceName')]"
        }
    }
}
