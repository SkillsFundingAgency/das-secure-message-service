trigger:
  batch: true
  branches:
    include:
      - "*"
  paths:
    include:
      - manifests/*
      - src/*
      - azure-pipelines.yml
      - Dockerfile

pr: none

variables:
  - group: 'Dev Management Resources'

pool:
    name: "DAS - Continuous Integration"

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/heads/master
    endpoint: "SkillsFundingAgency (1)"

stages:
- stage: build
  displayName: Build
  jobs:
  - job: build_image
    displayName: Build
    pool:
      name: "DAS - Continuous Integration"
    steps:
      - task: gittools.gitversion-preview.gitversion-task.GitVersion@5
        displayName: GitVersion
        inputs:
          configFilePath: GitVersion.yml
          updateAssemblyInfo: true

      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
            command: restore
            projects: "src/**/*.csproj"
            noCache: true

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
            command: build
            projects: "src/**/*.csproj"
            arguments: '--configuration release -p:Version=$(Build.BuildNumber)"'

      - task: DotNetCoreCLI@2
        displayName: Test
        inputs:
            command: test
            projects: "**/*.UnitTests.csproj"
            arguments: "--configuration release --no-build"
        enabled: false

      - template: azure-pipelines-templates/dependency-check.yml@SkillsFundingAgency/das-platform-building-blocks

      - task: DotNetCoreCLI@2
        displayName: "Publish Website"
        inputs:
            command: publish
            publishWebProjects: false
            modifyOutputPath: false
            zipAfterPublish: false
            projects: "src/SFA.DAS.SecureMessageService.Web/SFA.DAS.SecureMessageService.Web.csproj"
            arguments: "--configuration release --output $(system.defaultworkingdirectory)/publish/SFA.DAS.SecureMessageService.Web --no-restore --no-build"

      - task: DotNetCoreCLI@2
        displayName: "Publish API"
        inputs:
            command: publish
            publishWebProjects: false
            modifyOutputPath: false
            zipAfterPublish: false
            projects: "src/SFA.DAS.SecureMessageService.Api/SFA.DAS.SecureMessageService.Api.csproj"
            arguments: "--configuration release --output $(system.defaultworkingdirectory)/publish/SFA.DAS.SecureMessageService.Api --no-restore --no-build"

      - publish: $(system.defaultworkingdirectory)/publish
        artifact: publish

      - task: CopyFiles@2
        displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
        inputs:
          contents: |
            azure/**
            manifests/**
          targetFolder: '$(build.artifactstagingdirectory)/publish'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          pathtoPublish: '$(build.artifactstagingdirectory)/publish'

- stage: build_images
  dependsOn: build
  condition: succeeded()
  displayName: Build Images
  jobs:
  - job: build_web_image
    displayName: Build Web Image
    pool:
      name: "DAS - Continuous Integration"
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: publish
          path: $(system.defaultworkingdirectory)/publish

      - task: Docker@2
        displayName: Login to Docker Hub
        inputs:
            command: login
            containerRegistry: "Apprenticeships DevOps Docker Hub"

      - task: Docker@2
        displayName: Build Web Image
        inputs:
            command: build
            dockerfile: Web.Dockerfile
            repository: apprenticeshipsdevops/das-secure-message-service
            tags: |
                $(Build.BuildNumber)
                $(build.BuildNumber)-production

      - task: Docker@2
        displayName: Push Web Image
        inputs:
            command: push
            repository: apprenticeshipsdevops/das-secure-message-service
            tags: $(Build.BuildNumber)

      - task: Docker@2
        displayName: Push Web Image Latest if master
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
            command: push
            repository: apprenticeshipsdevops/das-secure-message-service
            tags: $(build.BuildNumber)-production

  - job: build_api_image
    displayName: Build Api Image
    pool:
      name: "DAS - Continuous Integration"
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: publish
          path: $(system.defaultworkingdirectory)/publish

      - task: Docker@2
        displayName: Login to Docker Hub
        inputs:
            command: login
            containerRegistry: "Apprenticeships DevOps Docker Hub"

      - task: Docker@2
        displayName: Build Api Image
        inputs:
            command: build
            dockerfile: Api.Dockerfile
            repository: apprenticeshipsdevops/das-secure-message-service-api
            tags: |
                $(Build.BuildNumber)
                $(build.BuildNumber)-production

      - task: Docker@2
        displayName: Push Api Image
        inputs:
            command: push
            repository: apprenticeshipsdevops/das-secure-message-service-api
            tags: $(Build.BuildNumber)

      - task: Docker@2
        displayName: Push Api Image Latest if master
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
            command: push
            repository: apprenticeshipsdevops/das-secure-message-service-api
            tags: $(build.BuildNumber)-production
