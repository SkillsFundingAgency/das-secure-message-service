name: "0.1.0-$(Rev:r)"
trigger:
  batch: true
  branches:
    include:
      - "app_modification_for_ag"
  paths:
    exclude:
      - README.md

pr:
  branches:
    include:
      - "*"

workspace:
  clean: all

pool:
  name: 'Hosted Ubuntu 1604'
  demands:
    - JAVA_HOME

variables:
  # - group: "ESFA - SonarCloud"
  - name: buildConfiguration
    value: "Release"
  - name: solutionPath
    value: "$(build.sourcesDirectory)/src/SFA.DAS.SecureMessageService.sln"
  # - name: sonarCloudProjectKey
  #   value: "SkillsFundingAgency_das-secure-message-service"

steps:
  # - task: SonarCloudPrepare@1
  #   displayName: "Prepare Sonar Analyzer"
  #   inputs:
  #     SonarCloud: "$(SonarCloudConnectionId)"
  #     organization: "$(SonarCloudOrganisationKey)"
  #     projectName: "$(Build.DefinitionName)"
  #     projectKey: "$(sonarCloudProjectKey)"
  #     extraProperties: |
  #       sonar.pullrequest.provider=GitHub
  #       sonar.pullrequest.github.repository=$(Build.Repository.Name)
  #       sonar.cs.opencover.reportsPaths=$(System.DefaultWorkingDirectory)/src/**/*.UnitTests/coverage.opencover.xml

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: $(solutionPath)
      arguments: "--configuration $(buildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: $(solutionPath)
      arguments: "--configuration $(buildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: "**/*.UnitTests.csproj"
      arguments: "--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover"

  # - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  #   displayName: "Run Code Analysis"

  - task: DotNetCoreCLI@2
    displayName: "Publish"
    inputs:
      command: publish
      publishWebProjects: true
      projects: $(solutionPath)
      arguments: "--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish"
  
  - task: DotNetCoreCLI@2
    displayName: "Publish"
    inputs:
      command: publish
      publishWebProjects: false
      projects: "src/SFA.DAS.SecureMessageService.Api/SFA.DAS.SecureMessageService.Api.csproj"
      arguments: "--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish"

  - task: CopyFiles@2
    displayName: "Copy Files to: $(build.artifactstagingdirectory)"
    inputs:
      Contents: |
        azure/**
      TargetFolder: "$(build.artifactstagingdirectory)/publish"
      OverWrite: true

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact"
    inputs:
      PathtoPublish: "$(build.artifactstagingdirectory)/publish"
